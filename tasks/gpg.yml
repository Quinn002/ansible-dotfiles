---

- name: Installing gpg formulas
  homebrew:
    name: "{{ gpg_formulas }}"
    state: latest
    update_homebrew: yes
  when: gpg_formulas | list

- name: Creating gpg config directory
  file:
    path: "{{ ansible_env.HOME }}/.gnupg"
    state: directory
    mode: "0700"
  when: gpg_agent_conf_source_file | string

- name: Installing pinetry configuration
  copy:
    src: "{{ gpg_agent_conf_source_file }}"
    dest: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
  when: gpg_agent_conf_source_file | string


- name: Checking gpg keys
  command: gpg -a --export {{ item.id }}
  register: gpg_export
  changed_when: false
  with_items: "{{ gpg_keys }}"

- name: Installing gpg keys
  no_log: yes
  block:
    - name: Copying gpg public key to temp file
      copy:
        src: "{{ gpg_base_source_path }}/{{ item.item.public }}"
        dest: /tmp/gpg_public_{{ item.item.public }}
        mode: "0600"
      when: item.stderr
      with_items: "{{ gpg_export.results }}"

    - name: Copying gpg private key to temp file
      copy:
        src: "{{ gpg_base_source_path }}/{{ item.item.private }}"
        dest: /tmp/gpg_private_{{ item.item.private }}
        mode: "0600"
      when: item.stderr
      with_items: "{{ gpg_export.results }}"

    - name: Installing gpg public key
      command: gpg --import /tmp/gpg_public_{{ item.item.public }}
      when: item.stderr
      with_items: "{{ gpg_export.results }}"

    - name: Installing gpg private key
      command: gpg --import /tmp/gpg_private_{{ item.item.private }}
      when: item.stderr
      with_items: "{{ gpg_export.results }}"
  always:
    - name: Deleting gpg public key temp file
      file:
        path: /tmp/gpg_public_{{ item.item.public }}
        state: absent
      with_items: "{{ gpg_export.results }}"

    - name: Deleting gpg private key temp file
      file:
        path: /tmp/gpg_private_{{ item.item.private }}
        state: absent
      with_items: "{{ gpg_export.results }}"
